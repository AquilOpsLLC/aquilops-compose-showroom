version: '3.8'

services:
  mongo1:
    container_name: mongo1
    image: mongo:latest
    command: mongod --replSet rs0 --port 27017 --bind_ip_all
    ports:
      - "27017:27017"
    restart: always
    volumes:
      - mongo1_data:/data/db
    networks:
      - mongo-network
    healthcheck:
      test: mongosh --eval "db.adminCommand('ping')"
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  mongo2:
    container_name: mongo2  
    image: mongo:latest
    command: mongod --replSet rs0 --port 27017 --bind_ip_all
    restart: always
    volumes:
      - mongo2_data:/data/db
    networks:
      - mongo-network
    depends_on:
      - mongo1
    healthcheck:
      test: mongosh --eval "db.adminCommand('ping')"
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  mongo3:
    container_name: mongo3
    image: mongo:latest
    command: mongod --replSet rs0 --port 27017 --bind_ip_all
    restart: always
    volumes:
      - mongo3_data:/data/db
    networks:
      - mongo-network
    depends_on:
      - mongo1
    healthcheck:
      test: mongosh --eval "db.adminCommand('ping')"
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s
  
  mongo-init:
    container_name: mongo-init
    image: mongo:latest
    restart: "no"
    networks:
      - mongo-network
    depends_on:
      mongo1:
        condition: service_healthy
      mongo2:
        condition: service_healthy  
      mongo3:
        condition: service_healthy
    volumes:
      - ./scripts:/scripts
    entrypoint: ["bash", "/scripts/init-replica.sh"]

volumes:
  mongo1_data:
  mongo2_data:
  mongo3_data:

networks:
  mongo-network:
    driver: bridge
